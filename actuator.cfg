#[gcode_macro Actuator_UP]
#gcode:  
 #QUERY_ENDSTOPS
 #{% if   printer.query_endstops.last_query["MANUAL_STEPPER BATH.endstop"] == "TRIGGERED" %}
  #SET_PIN PIN=Actuator_EN VALUE=1
  #SET_PIN PIN=Actuator_L VALUE=0
  #SET_PIN PIN=Actuator_R VALUE=0
  #{% if printer["gcode_button actuator_endstop"].state == "RELEASED" %}
  #G4 P6000
  #SET_PIN PIN=Actuator_EN VALUE=0
  #M117 "ACT TOP"
  #{% else %}
  #RESPOND MSG="Сперва задвиньте баню"
 # Home
  #{% endif %}

#[gcode_macro ENDSTOPS]
#gcode:
  #QUERY_ENDSTOP ENDSTOP=endstop_1
  #{% if printer["endstop_custom endstop_1"].state == "TRIGGERED" %}
  #SET_PIN PIN=Actuator_EN VALUE=1
  ##SET_PIN PIN=Actuator_R VALUE=0
  #M117 "ACT TOP"
  #{% else %}
  #RESPOND MSG="Сперва задвиньте баню"
  #{% endif %}


#[gcode_macro Actuator_DOWN]
#gcode:
# {% if  printer["MANUAL_STEPPER BATH"].state != "TRIGGERED" %}
 # SET_PIN PIN=Actuator_EN VALUE=1
 # SET_PIN PIN=Actuator_R VALUE=1
 # SET_PIN PIN=Actuator_L VALUE=1
#    {% else %}
#  RESPOND MSG="Сперва задвиньте баню"
#  Home
 # {% endif %}

  # {% if printer["gcode_button actuator_endstop"].state == "PRESSED" %}
 # SET_PIN PIN=Actuator_EN VALUE=0
  #SET_PIN PIN=Actuator_R VALUE=0
  #SET_PIN PIN=Actuator_L VALUE=0
  #M117 "ACT DOWN"
  #{% endif %}


[output_pin Actuator_EN]
pin: PA1
shutdown_value: 0
value:0


[output_pin Actuator_R]
pin: PA8
shutdown_value: 0
value:0

[output_pin Actuator_L]
pin: PD12
shutdown_value: 0
value:0

[gcode_button actuator_endstop]
pin:PG10
#   The pin on which the button is connected. This parameter must be
#   provided.
#analog_range:
#   Two comma separated resistances (in Ohms) specifying the minimum
#   and maximum resistance range for the button. If analog_range is
#   provided then the pin must be an analog capable pin. The default
#   is to use digital gpio for the button.
#analog_pullup_resistor:
#   The pullup resistance (in Ohms) when analog_range is specified.
#   The default is 4700 ohms.
press_gcode: M117 "Click!"
#   A list of G-Code commands to execute when the button is pressed.
#   G-Code templates are supported. This parameter must be provided.
#release_gcode:
#   A list of G-Code commands to execute when the button is released.
#   G-Code templates are supported. The default is to not run any
#   commands on a button release.



[gcode_macro _ENDSTOPS_VARIABLES]
variable_endstop_1_state: False
gcode:


# HELPER FUNCTION
# make query for update endstops internal state
[gcode_macro _CHECK_ENDSTOPS]
gcode:
    # UPDATE LAST STATE 
    QUERY_ENDSTOP ENDSTOP=endstop_1

    _UPDATE_ENDSTOPS_VARIABLES 

# HELPER FUNCTION FOR HELPER FUNCTION
# write endstops states to global variables
# 
[gcode_macro _UPDATE_ENDSTOPS_VARIABLES]
gcode:
  {% set ENDSTOP_STATE_1 = printer["endstop_custom endstop_1"].state|default(0)|int %}
  SET_GCODE_VARIABLE MACRO=_ENDSTOPS_VARIABLES VARIABLE=endstop_1_state VALUE={ ENDSTOP_STATE_1 }


# EXAMPLES OF USAGE
# test how to read endstop in runtime and use with if-else
[gcode_macro ACT_UP]
gcode:
  # update states 
  _CHECK_ENDSTOPS
  ENDSTOP_CHECK_1
  SET_PIN PIN=Actuator_EN VALUE=1
  SET_PIN PIN=Actuator_L VALUE=0
  SET_PIN PIN=Actuator_R VALUE=0
  RESPOND MSG="Голова в верхнем положении"
 
  # update states 
  _CHECK_ENDSTOPS


[gcode_macro ACT_DOWN]
gcode:
  # update states 
  _CHECK_ENDSTOPS
  ENDSTOP_CHECK_1
  {% if endstop_1_state %}
  RESPOND MSG="Задвиньте баню"
    {% else %}
  SET_PIN PIN=Actuator_EN VALUE=1
  SET_PIN PIN=Actuator_R VALUE=1
  SET_PIN PIN=Actuator_L VALUE=1
  RESPOND MSG="Голова в нижнем положении"
    {% endif %}
 
  # update states 
  _CHECK_ENDSTOPS

# macros for processing endstop logic
# MUST be isolated macros
# in this macros we read endstop's state from global variable (_ENDSTOPS_VARIABLES)
[gcode_macro ENDSTOP_CHECK_1]
gcode:
    # read from global variable 
    {% set endstop_1_state = printer["gcode_macro _ENDSTOPS_VARIABLES"].endstop_1_state %}
    {% if endstop_1_state %}
        RESPOND MSG="ENDSTOPE 1 CHECK TRUE (ENDSTOP is triggered)"
    {% else %}
        RESPOND MSG="ENDSTOPE 1 CHECK FALSE (ENDSTOP is open)"
    {% endif %}

[gcode_macro Move_forward]
gcode:
  # update states 
  _CHECK_ENDSTOPS
  ENDSTOP_CHECK_1
  {% set speed = params.SPEED|default(25) %}
  {% set syn = params.SYNC|default(0) %}
  {% set purge_distance = params.MOVE|default(215) %}
  {% set pump = params.STEPPER|default('bath') %}
  {% if printer["endstop_custom endstop_1"].state %}
    RESPOND MSG="концевик open"
  {% else %}
    MANUAL_STEPPER STEPPER={pump} ENABLE=1
    MANUAL_STEPPER STEPPER={pump} MOVE={purge_distance} SPEED={speed} SYNC={syn} SET_POSITION=0 
    M400  # дождаться выполнения команды
    RESPOND MSG="Мотор сработал"
    MANUAL_STEPPER STEPPER={pump} ENABLE=0
  {% endif %}

[gcode_macro Move_forward_test]
gcode:
  # обновление состояний
  _CHECK_ENDSTOPS
  ENDSTOP_CHECK_1
  {% set speed = params.SPEED|default(25) %}
  {% set syn = params.SYNC|default(0) %}
  {% set purge_distance = params.MOVE|default(215) %}
  {% set pump = params.STEPPER|default('bath') %}

  # Проверка состояния концевика
  {% if printer["endstop_custom endstop_1"].state %}
    RESPOND MSG="Мотор не сработал"

  {% else %}
    RESPOND MSG="Концевик сработал, начинаю движение."
    _CHECK_ENDSTOPS
    ENDSTOP_CHECK_1
    # Включение мотора
    MANUAL_STEPPER STEPPER={pump} ENABLE=1
    
    # Выполнение движения на указанное расстояние
    MANUAL_STEPPER STEPPER={pump} MOVE={purge_distance} SPEED={speed} SYNC={syn} SET_POSITION=0 
    M400  # дождаться выполнения команды

    # Завершение работы
    RESPOND MSG="Мотор сработал и завершил движение."
    MANUAL_STEPPER STEPPER={pump} ENABLE=0

  {% endif %}



[gcode_macro Move_back]
gcode:
  # update states 
  _CHECK_ENDSTOPS
  ENDSTOP_CHECK_1
  {% set speed = params.SPEED|default(25) %}
  {% set syn = params.SYNC|default(0) %}
  {% set purge_distance = params.MOVE|default(-215) %}
  {% set pump = params.STEPPER|default('bath') %}
  {% if printer["endstop_custom endstop_1"].state %}
    MANUAL_STEPPER STEPPER={pump} ENABLE=1
    MANUAL_STEPPER STEPPER={pump} MOVE={purge_distance} SPEED={speed} SYNC={syn} SET_POSITION=0 
    M400  # дождаться выполнения команды
    RESPOND MSG="Мотор сработал"
    MANUAL_STEPPER STEPPER={pump} ENABLE=0
  {% else %}
    RESPOND MSG="концевик triggered"
  {% endif %}


[gcode_macro Move_back_test]
gcode:
  # Обновление состояний
  _CHECK_ENDSTOPS
  ENDSTOP_CHECK_1
  {% set speed = params.SPEED|default(25) %}
  {% set syn = params.SYNC|default(0) %}
  {% set purge_distance = params.MOVE|default(-215)|float %}  
  {% set step_size = 10 %} 
  {% set pump = params.STEPPER|default('bath') %}

  # Проверка состояния концевика
  {% if printer["endstop_custom endstop_1"].state %}
    RESPOND MSG="Концевик сработал, остановка мотора."
      MANUAL_STEPPER STEPPER={pump} ENABLE=0
    {% else %}
    RESPOND MSG="Концевик не сработал, начинаю движение."

    # Включение мотора
    MANUAL_STEPPER STEPPER={pump} ENABLE=1
    _CHECK_ENDSTOPS
    ENDSTOP_CHECK_1
    # Шаги движения
    {% set distance_moved = 0 %}
    {% set steps = (purge_distance | float | abs // step_size)|int %}  # Количество шагов для движения

    {% for i in range(steps) %}
      # Перемещение на один шаг
      MANUAL_STEPPER STEPPER={pump} MOVE={-step_size} SPEED={speed} SYNC={syn}
      M400  # Ожидание выполнения команды
      {% set distance_moved = distance_moved + step_size %} # Обновление пройденного расстояния
      MANUAL_STEPPER STEPPER={pump} ENABLE=0
    {% endfor %}
  {% endif %}



[gcode_macro Move_test]
gcode:
  # update states 
  {% set speed = params.SPEED|default(25) %}
  {% set syn = params.SYNC|default(0) %}
  {% set purge_distance = params.MOVE|default(2) %}
  {% set pump = params.STEPPER|default('bath') %}
    MANUAL_STEPPER STEPPER={pump} ENABLE=1
    MANUAL_STEPPER STEPPER={pump} MOVE={purge_distance} SPEED={speed} SYNC={syn} SET_POSITION=0 
    M400  # дождаться выполнения команды
    MANUAL_STEPPER STEPPER={pump} ENABLE=0
